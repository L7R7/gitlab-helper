gitlab-helper - a collection of utilities for dealing with a load of projects in
Gitlab

Usage: gitlab-helper [--group-id ID] [--base-url URL] [--api-token TOKEN] 
                     [--exclude-projects ID1,ID2,ID3] COMMAND

  gitlab-helper

Available options:
  -h,--help                Show this help text
  --group-id ID            set the ID of the group to look at
  --base-url URL           Base URL of the Gitlab instance (e.g.
                           `https://gitlab.com/`)
  --api-token TOKEN        API Token to use for authorizing requests against the
                           Gitlab API. `api` scope is required.
  --exclude-projects ID1,ID2,ID3
                           set the list of projects to exclude as a
                           comma-separated list of IDs

Available commands:
  version                  print program version
  show-branches            show branches
  show-projects            show projects
  list-all-projects-meta   list all the projects for all groups that are visible
                           for the provided API token in (almost) meta
                           compatible JSON format
  list-projects-meta       list the projects for the given group in (almost)
                           meta compatible JSON format
  enable-source-branch-deletion
                           enable source branch deletion after merge for all
                           projects
  enable-all-discussions-must-be-resolved-for-merge-requirement
                           enable the requirement that all discussions must be
                           resolved for an MR to be merged for all projects
  enable-successful-pipeline-for-merge-requirement
                           enable the requirement that there must be a
                           successful pipeline for an MR to be merged for all
                           projects. CAUTION: Use with care, might not do what
                           you want in projects without pipelines
  show-schedules           show schedules
  show-merge-requests      show projects with and without enabled merge
                           requests, list merge requests
  count-deployments        count the number of successful deployments per
                           project (a successful push pipeline on the default
                           branch is counted as a deployment)
  set-merge-method-to-fast-forward
                           Set the merge method for all projects to "Fast
                           Forward"
  update-merge-requests    Update all MRs from a given user that match a given
                           condition with a given command

For the commands that are not read-only, use "-x" to make them actually do stuff